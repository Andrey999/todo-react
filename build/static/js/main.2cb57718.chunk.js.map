{"version":3,"sources":["TodoItem.js","Todo.js","App.js","index.js"],"names":["TodoItem","_ref","task","handleDeleteItem","react_default","a","createElement","className","map","item","i","key","id","value","onClick","Todo","state","addValueToItem","event","_this$state","_this","length","inputValue","Date","setState","concat","handleInputChange","target","index","newTask","filter","_this$state2","this","type","placeholder","onChange","onKeyPress","src_TodoItem_0","Component","App","src_Todo_0","ReactDOM","render","src_App","document","getElementById"],"mappings":"wSAuBeA,SAnBE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,iBAAT,OACbC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACHH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAENL,EAAKM,IAAI,SAACC,EAAMC,GACZ,OAAON,EAAAC,EAAAC,cAAA,MAAIK,IAAKF,EAAKG,IAAQH,EAAKI,MAC1BT,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAyBO,QAAS,kBAAMX,EAAiBO,KAAzE,eCmDrBK,oNAvDXC,MAAQ,CACJd,KAAM,GACNW,MAAO,MAIXI,eAAiB,SAACC,GAAU,IAAAC,EACAC,EAAKJ,MAArBH,EADgBM,EAChBN,MAAOX,EADSiB,EACTjB,KAEf,KAAIW,EAAMQ,OAAS,GAAmB,UAAdH,EAAMP,KAStB,OAAO,EARX,IAAMW,EAAa,CACfT,MAAOA,EACPD,IAAK,IAAIW,MAEbH,EAAKI,SAAS,CACVtB,KAAMA,EAAKuB,OAAOH,GAClBT,MAAO,QAKnBa,kBAAoB,SAACR,GACjBE,EAAKI,SAAS,CAAGX,MAAOK,EAAMS,OAAOd,WAGzCV,iBAAmB,SAACyB,GAAU,IAEtBC,EADaT,EAAKJ,MAAdd,KACW4B,OAAO,SAAErB,EAAMC,GAAR,OAAeA,IAAMkB,IAC/CR,EAAKI,SAAS,CACVtB,KAAM2B,6EAIL,IAAAE,EACmBC,KAAKhB,MAArBH,EADHkB,EACGlB,MAAOX,EADV6B,EACU7B,KAEf,OACIE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACPH,EAAAC,EAAAC,cAAA,SAAO2B,KAAK,OACL1B,UAAU,YACV2B,YAAY,iFACZrB,MAAOA,EACPsB,SAAWH,KAAKN,kBAChBU,WAAaJ,KAAKf,iBAG7Bb,EAAAC,EAAAC,cAAC+B,EAAD,CACInC,KAAOA,EACPC,iBAAmB6B,KAAK7B,2BAjDzBmC,cCWJC,MAXf,WACE,OACEnC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAACkC,EAAD,SCLZC,IAASC,OAAOtC,EAAAC,EAAAC,cAACqC,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.2cb57718.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './TodoItem.css'\r\n\r\n\r\nconst TodoItem = ({ task, handleDeleteItem }) => (\r\n    <div className='todoList'>\r\n                <ul className=\"todolist__item\">\r\n                    {\r\n                        task.map((item, i) => {\r\n                            return <li key={item.id}  >{ item.value }\r\n                                    <span className=\"todolist__item-delete\"  onClick={() => handleDeleteItem(i)} >&times;</span>\r\n                                {/* <input type=\"checkbox\" id={item.id} className='toggle' /> */}\r\n                                    {/* <label htmlFor={item.id} className={isDone ? 'active' : null } onClick={this.handleLabelDecoration} >{item.value} */}\r\n                                  \r\n                                    {/* </label> */}\r\n                                    \r\n                            </li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n  );\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from 'react';\r\nimport TodoItem from './TodoItem';\r\n\r\nimport './Todo.css';\r\n\r\nclass Todo extends Component {\r\n    state = {\r\n        task: [], // массив тасков\r\n        value: '', // значение в инпут\r\n    };\r\n\r\n    // добавляем  Task при клике на Enter\r\n    addValueToItem = (event) => {\r\n        const { value, task } = this.state;\r\n\r\n        if (value.length > 3 && event.key === 'Enter') {\r\n            const inputValue = { // добавляем в обьект\r\n                value: value,    // значение инпута\r\n                id: +new Date(), // id для таски\r\n            };\r\n            this.setState({\r\n                task: task.concat(inputValue),\r\n                value: '',\r\n            });\r\n        }  else return false;\r\n    };\r\n    // вводимые значения\r\n    handleInputChange = (event) => {\r\n        this.setState({  value: event.target.value  })\r\n    };\r\n\r\n    handleDeleteItem = (index) => {\r\n        const { task } = this.state;\r\n        let newTask = task.filter(( item, i ) => i !== index)\r\n        this.setState({\r\n            task: newTask\r\n          });\r\n    }\r\n\r\n    render() {\r\n        const { value, task } = this.state;\r\n\r\n        return(\r\n            <div className=\"todo\">\r\n                    <input type=\"text\"\r\n                           className=\"todoInput\"\r\n                           placeholder=\"Создайте свой Task\"\r\n                           value={value}\r\n                           onChange={ this.handleInputChange }\r\n                           onKeyPress={ this.addValueToItem }\r\n                    />\r\n\r\n                <TodoItem\r\n                    task={ task }\r\n                    handleDeleteItem={ this.handleDeleteItem }\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Todo;","import React from 'react';\nimport './App.css';\n\nimport Todo from './Todo'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n        <div className=\"app\">\n            <h1>TodoApp</h1>\n            <Todo />\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}